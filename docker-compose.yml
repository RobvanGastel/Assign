version: '2'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    container_name: nginx-proxy
    network_mode: bridge
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/etc/nginx/vhost.d'
      - '/usr/share/nginx/html'
      - '/etc/nginx/certs:/etc/nginx/certs:ro'
      - '/var/run/docker.sock:/tmp/docker.sock:ro'

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    volumes_from:
      - nginx-proxy
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx-proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  wildfly:
    image: wildfly
    network_mode: bridge
    environment:
     - VIRTUAL_HOST=api.assignapp.nl
     - VIRTUAL_PORT=8080
     - VIRTUAL_NETWORK=nginx-proxy
     - LETSENCRYPT_HOST=api.assignapp.nl
     - LETSENCRYPT_EMAIL=assignapp.dev@gmail.com
     - MYSQL_HOST=***REMOVED***
     - MYSQL_PORT=5306
     - TZ=Europe/Amsterdam
    ports:
     - '8080:8080'

  page:
    image: assign-page
    restart: always
    network_mode: bridge
    environment:
     - VIRTUAL_HOST=www.assignapp.nl,assignapp.nl
     - VIRTUAL_PORT=3000
     - VIRTUAL_NETWORK=nginx-proxy
     - LETSENCRYPT_HOST=assignapp.nl
     - LETSENCRYPT_EMAIL=assignapp.dev@gmail.com

networks:
  default:
    external:
      name: nginx-net